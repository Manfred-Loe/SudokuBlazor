<MudPaper Width="66px" Height="66px" Class=@Class Square="true" Outlined="true">
	@if (_Cell.Number != 0)
	{
		<MudText Style="@($"font-size: 30px;color:{Colors.Blue.Darken1}; ")">@_Cell.Number</MudText>	
	}
	else
	{
		<MudGrid Spacing="0" Justify="Justify.Center" Class="align-center">
			@for (int i = 1; i < 10; i++)
			{
				int x = i;
					<MudItem>
						<MudPaper Height="20px" Width ="20px" Class="d-flex align-center justify-center border-dotted" Outlined="true" Square="true">
							<div @onclick="() => SetValue(x)" style="cursor: pointer;">
								@x
							</div>
								
						</MudPaper>
					</MudItem>
			}
		</MudGrid>
	}
</MudPaper>




@code {
	[Parameter, EditorRequired]
	public Cell _Cell { get; set; } = new();
	[Parameter]
	public string? Class { get; set; } = "d-flex align-center justify-center";

	protected override async Task OnParametersSetAsync()
	{
		await Task.Delay(100);
		StateHasChanged();
	}


	public void SetValue (int clueNumber){
		_Cell.Number = clueNumber;
		StateHasChanged();
	}

	public void Reset(){
		_Cell.Number = 0;
		StateHasChanged();
	}
}

